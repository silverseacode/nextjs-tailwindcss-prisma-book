// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Messages {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  from      String   @db.ObjectId
  to        String   @db.ObjectId
  fullName  String
  image     String
  createdAt DateTime @default(now())
  message   String
  roomId    String
  chatId    String   @db.ObjectId
  chat      Chats    @relation(fields: [chatId], references: [id])
}

model Chats {
  id       String     @id @default(auto()) @map("_id") @db.ObjectId
  from     String     @db.ObjectId
  to       String     @db.ObjectId
  messages Messages[]
}

model Notifications {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  from     String @db.ObjectId
  to       String @db.ObjectId
  fullName String
  image    String
  type     String
  postId   String
  status   String
}

model Request {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  from     String @db.ObjectId
  to       String @db.ObjectId
  status   String
  fullName String
  image    String
}

model Connections {
  id                String @id @default(auto()) @map("_id") @db.ObjectId
  fullName          String
  email             String
  image             String
  userId            String @db.ObjectId
  userIdThatFollows String @db.ObjectId
  user              User   @relation(fields: [userIdThatFollows], references: [id])
}

model User {
  id          String        @id @default(auto()) @map("_id") @db.ObjectId
  fullName    String
  email       String
  image       String
  aboutMe     String
  likes       Likes[]
  posts       Post[]
  comments    Comments[]
  connections Connections[]
}

model Likes {
  id         String @id @default(auto()) @map("_id") @db.ObjectId
  fullName   String
  profilePic String
  postId     String @db.ObjectId
  userId     String @db.ObjectId
  post       Post   @relation(fields: [postId], references: [id])
  user       User   @relation(fields: [userId], references: [id])
}

model Comments {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  fullName    String
  profilePic  String
  postId      String   @db.ObjectId
  userId      String   @db.ObjectId
  post        Post     @relation(fields: [postId], references: [id])
  user        User     @relation(fields: [userId], references: [id])
  description String
  createdAt   DateTime @default(now())
}

model Post {
  id          String     @id @default(auto()) @map("_id") @db.ObjectId
  description String
  pictureUrl  String
  createdAt   DateTime   @default(now())
  userId      String     @db.ObjectId
  profilePic  String
  fullName    String
  user        User       @relation(fields: [userId], references: [id])
  likes       Likes[]
  comments    Comments[]
}
